machine:
  environment:
    PATH:              $HOME/.terraform:$PATH
    TERRAFORM_VERSION: 0.6.8
    S3_BUCKET_NAME:    creasty-infra
    S3_OBJECT_KEY:     terraform.tfstate

dependencies:
  cache_directories:
    - ~/.terraform
  pre:
    - |
      set -e

      TERRAFORM_PATH="$HOME/.terraform"
      VERSION_FILE="$TERRAFORM_PATH/.version"

      [ -d $TERRAFORM_PATH ] || mkdir -p $TERRAFORM_PATH

      touch "$VERSION_FILE"

      if [ "$(cat "$VERSION_FILE")" = "$TERRAFORM_VERSION" ]; then
        exit 0
      else
        rm -rf $TERRAFORM_PATH
        mkdir -p $TERRAFORM_PATH
        echo -n "$TERRAFORM_VERSION" > "$VERSION_FILE"
      fi

      cd $TERRAFORM_PATH
      curl -LO https://dl.bintray.com/mitchellh/terraform/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip

test:
  pre:
    - ./script/create-varfile
    - |
      set -e
      terraform remote config -backend=S3 -backend-config="bucket=$S3_BUCKET_NAME" -backend-config="key=$S3_OBJECT_KEY"
      terraform remote pull
  override:
    - terraform plan -var-file=terraform.tfvars terraform | ./script/mask-credentials && exit $PIPESTATUS
  post:
    - terraform remote push

deployment:
  production:
    branch: master
    commands:
      - |
        terraform remote config -backend=S3 -backend-config="bucket=$S3_BUCKET_NAME" -backend-config="key=$S3_OBJECT_KEY"
        terraform remote pull
        terraform apply -var-file=terraform.tfvars terraform | ./script/mask-credentials && exit $PIPESTATUS
        terraform remote push
